{
    "collab_server" : "",
    "contents" : "---\ntitle: \"AWS EC2 Ubuntu Cheat Sheet\"\noutput: \n  html_document:\n   toc: false\n   self_contained: false\n---\n\n\n#Cheatsheet for AWS Ubuntu server setup\n\n- Start AWS EC2 instance (Linux 16.04 LTS)  \n\n- Register new key if none already exist (when prompted during the EC2 setup)\n\n- Access server through putty (well explained in EC2 connexion console)\n\n    - Install putty: http://www.putty.org/  \n    - Convert Amazon key to putty format  \n        - Open PuTTYgen \n            - Type of key to generate: SSH-2-RSA\n            - Load the .pem key obtained during EC2 seting up\n            - Save private key (optional to have a passphrase)\n        - In PuTTY\n            - Host Name: ubuntu@public_dns_name  \n            - In Connection > SSH > Auth  \n\n- Proceed to server setting up\n\n- Copy the the required files from local machine to EC2 (RStudio convenient for small files, winSCP otherwise)\n\n- Copy the Website and Shiny Apps in appropirate folders\n\n\\ \n\n##Server setup\n\nIf starting a new session, first need to install and setup few utilities\n\nAdd a sudo (super user do) account \n\n    `sudo adduser <user> && sudo adduser <user> sudo`\n\n  1. Get latest packages\n  \n    `sudo nano /etc/apt/sources.list`\n    \n    Add the following line to the file:  \n        `deb https://cran.rstudio.com/bin/linux/ubuntu xenial/`  \n    And save using Ctrl-X\n        \n2. R-base-dev (dev because it apparently makes the installation of packages possible-easier) and Shiny package \n\n    `sudo apt-get update`  \n    `sudo apt-get install r-base-dev`\n        \n3. Shiny Server\n\n    ```{r eval=F}\n    sudo apt-get install gdebi-core  \n    wget https://download3.rstudio.org/ubuntu-12.04/x86_64/shiny-server-1.4.2.786-amd64.deb  \n    sudo gdebi shiny-server-1.4.2.786-amd64.deb\n    ```\n\n        \n    \n4. RStudio\n    \n    `wget https://download2.rstudio.org/rstudio-server-0.99.896-amd64.deb`  \n    `sudo gdebi rstudio-server-0.99.896-amd64.deb`\n    \n5. Apache Web Server \n\n    `sudo apt-get install apache2`\n    \n    The website will then need to be copied in the following directory  \n    /var/www/html/index.html\n    \n\nMemomy may be limited and swap space required (http://aws-labs.com/add-swap-ubuntu-14-04/):  \n\n\n```{r eval=F}\nsudo fallocate -l 4G /swapfile\nsudo chmod 600 /swapfile\nsudo mkswap /swapfile\nsudo swapon /swapfile  \n\n```\n\nFor R package installation, some additional Linux packages may be required: \n\n```{r eval=F}\nsudo apt-get install libcurl4-openssl-dev\nsudo apt-get install libssl-dev\nsudo apt-get install libgeos-dev\nsudo apt-get install libxml2-dev\nsudo apt-get install libgdal-dev\nsudo apt-get install libproj-dev\n```\n\n\n\\ \n\n\n##Upload website from local machine to the AWS Instance\n\nCopy website\n\n`sudo cp -a /home/<user>/Website/. /var/www/html/`\n\nRemove all files within a directory: \n\n`sudo rm -rf /var/www/html/*`\n\nRemove folder:\n\n`sudo rm -rf /var/www/html/Website`\n\n\n\\ \n\n##Upload a Shiny app\n\n\nCopy the folder containing the application (creating KillerApp)\n\n`sudo cp -ar /home/<user>/KillerApp/ /srv/shiny-server/`\n\nTo delete an existing app: \n\n`sudo rm -rf /srv/shiny-server/WoundedApp`\n\n\\ \n\n##Manipulation with Shiny server\n\n- sudo start shiny-server  \n- sudo stop shiny-server  \n- sudo restart shiny-server  \n\nConfiguration\nShiny Server is mainly configured via the following file: `/etc/shiny-server/shiny-server.conf`\n\nWe can use the minimalistic text editor Nano to edit the configuration file. \n\n`sudo nano /etc/shiny-server/shiny-server.conf`\n\nin Nano, change the port to 80\nSave the file by hitting Ctrl+X and answering Yes\nRestarting the server by typing\n\nOpen port 80 in the AWS EC2 Security Group by adding a custom TCP rule for port 80 to make apps available to all. \n\n\\ \n\n### Git tricks\n\n",
    "created" : 1509517431121.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2422538719",
    "id" : "F49B5D2D",
    "lastKnownWriteTime" : 1509517580,
    "last_content_update" : 1509517580760,
    "path" : "C:/Data/GitHub/jeremiedb.github.io/docs_make/AWS_tricks.Rmd",
    "project_path" : "AWS_tricks.Rmd",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}